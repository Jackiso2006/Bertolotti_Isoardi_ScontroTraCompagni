
/* IMPLEMENTAZIONE FONT */
@font-face {
    font-family: "bold";
    src: url(../../font/RedHatDisplay-Bold.otf);
}

@font-face {
    font-family: "regular";
    src: url(../../font/RedHatDisplay-Regular.otf);
}

/* PARTE RELATIVA ALL'ANIMAZIONE INIZIALE */

#sectionAnimation{
    z-index: 0;
    position: absolute;
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background-image: url(../../img/blackground_logo.png);
    background-position: center;
    background-size: 100% 100%;
    opacity: 0;
    animation: resetSection 3.8s linear 1;
}

#circle{
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 200px;
    height: 200px;
    border-radius: 50%;
    background-color: rgba(6, 6, 6, 0.9);
    box-shadow: 0px 0px 15px 15px rgb(6, 6, 6);
    animation: pulse 1.8s 2 linear;
}

.miniCircle{
    position: absolute;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    opacity: 0;
    animation: circleRotate cubic-bezier(0.59, 0.98, 0.64, 0.62) 1.8s 2;
}

.miniCircle:nth-child(2){
    animation-delay: 0.2s;
}

.miniCircle:nth-child(3){
    animation-delay: 0.1s;
}

.miniCircle:nth-child(4){
    animation-delay: 0.3s;
}

#circle > span::after{
    color: aliceblue;
    font-size: 23px;
    font-family: "bold";
    content: "Loading";
    animation: loadingText cubic-bezier(0.59, 0.98, 0.64, 0.62) 1.9s 2;
}

/* FINE PARTE RELATIVA ALL' ANIMAZIONE INIZIALE */

a{
    text-decoration: none;
}

button , a{
    transition: filter 0.2s, transform 0.2s;
    cursor: pointer;
}

.joystick button:hover , #menu button:hover , header button:hover , a:hover{
    filter: drop-shadow(0px 0px 15px black);
    transform: scale(110%);
}

span.material-symbols-rounded{
    font-size: 50px;
    width: fit-content;
    height: fit-content;
}

body {
    margin: 0;
    overflow: hidden;
    width: 100%;
    height: 100vh;
    background-image: url("../../img/gtaVgroove.jpg");
    background-color: rgba(6, 6, 6, 0.6);
    background-position: center;
    background-size: cover;
}

header {
    position: fixed;
    z-index: 4;
    top: -110px;
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: 100%;
    height: 120px;
    background-image: url("../../img/blackground_logo.png");
    background-size: contain;  
    transition: top 0.7s;
}

header:hover {
    top: 0px;
}

header > div{
    width: fit-content;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-evenly;
}

header button , header a{
    border-radius: 50%;
    border: 4px aliceblue solid;
    padding: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: aliceblue;
    background-color: rgb(6, 6, 6);
}

#volumeBtn:focus + #volumeRange , #volumeRange:hover{
    display: flex;
}

#volumeRange{
    display: none;
    justify-content: center;
    color: aliceblue;
}

#volumeRange > span{
    font-size: 20px;
    padding: 0px 5px;
}

/*
riesco a modificare le impostazioni base del tag <input type="range">
browser tramite la pseudo-classe -webkit */

/*  BARRA DEL RANGE  */
#volumeValue::-webkit-slider-runnable-track {
    -webkit-appearance: none;
    background-color: #d017da;
    border-radius: 10px;
    width: 200px;
    height: 10px;
}

/*  PALLINO  */
#volumeValue::-webkit-slider-thumb {
    margin-top: -3px;
    cursor: pointer;
}

/* 
    pt.1 nojava.css
    usando la pseudo-classe ::before e l'attributo (content:"")
    riesco a modificare il contenuto dell'elemento immediatamente prima 
*/
header >:last-child > span::before{
    content: "light_mode";
}

header >:last-child:focus > span::before{
    content: "dark_mode";
}

/*  FINE PARTE RELATIVA ALL'HEADER  */



/* PARTE RELATIVA AL MENU */

/* se body ha il bottone in :focus allora apllica ""AL BODY"" ...*/
body:has(header > #pauseBtn:focus , #menu:hover){
    background-blend-mode: darken;
}

/* se body ha il bottone in :focus allora apllica ""A BODY > MAIN"" ...*/
body:has(header > #pauseBtn:focus , #menu:hover) > main{
    opacity: 0.5;
}

body:has(header > #pauseBtn:focus , #menu:hover) > #menu{
    display: flex;
    opacity: 1;
    animation: show 0.3s linear;
}

header:has(> #pauseBtn:focus , #menu:hover){
    top: -110px;
}

@keyframes show { from{opacity: 0;} to{opacity: 1;} }

#menu{
    position: fixed;
    z-index: 10;
    top: 20%;
    left: 40.5%;
    display: none;
    flex-direction: column;
    justify-content: space-between;
    width: 19%;
    height: 50%;
    color: aliceblue;
    font-size: 3vh;
    font-family: "bold";
    opacity: 0;
}

#menu > div:first-child{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 20%;
    animation: pulse 1.8s linear infinite;
}

#menu > div:first-child > span:first-child{
    font-size: 5vh;
    padding-right: 1vh;
}

#menu > div:last-child{
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: space-evenly;
    width: 100%;
    height: 80%;
    background-color: rgb(6, 6, 6);
    border: 1vh solid;
    animation: raimbowBorder 3s infinite linear;
}

#menu a{
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    width: 80%;
    height: 15%;
    border-radius: 1vh;
    border: 0.5vh aliceblue solid;
    color: aliceblue;
    background-image: linear-gradient(90deg,#5283ec, #af36c7);
}
/* FINE PARTE RELATIVA AL MENU */


/* SCHERMO */
main {
    position: absolute;
    z-index: 1;
    display: flex;
    width: 100%;
    height: 100vh;
}

/*  SCHERMO DIVISO IN 2 SECTION  */
section {
    height: 100%;
    width: 50%;
    display: flex;
    flex-direction: column;
}

/* LINEA SEPARATORE GIOCATORE 1-2*/
#separator {
    height: 100%;
    position: absolute;
    z-index: 3;
    width: 5px;
    background-color: rgba(240, 248, 255, 0.5);
    left: 49.8%;
    top: 0%;
}

/*  BARRA DELLA VITA  */
div.life {
    position: absolute;
    z-index: 3;
    top: 20px;
    width: 400px;
    height: 10px;
    border: 5px lightgrey solid;
    border-radius: 10px;
    background-color: red;
}

/* CONTROLLY E JOYSTICK */
.control {
    z-index: 3;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 220px;
}

.joystick {
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: fit-content;
    height: 180px;
    border-radius: 50px;
    border: 5px aliceblue solid;
    background-color: rgba(6, 6, 6, 0.6);
}

.ability {
    width: 55%;
    height: 200px;
    display: flex;
    align-items: center;
    justify-content: space-evenly;
}

.ability > button {
    width: 110px;
    height: 110px;
    margin: 10px;
    background: none;
    border: none;
    padding: 0px;
    border-radius: 50%;
}

.ability > button > img {
    width: 100%;
    height: 100%;
}

.movement {
    width: 200px;
    height: 135px;
    margin: 20px;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-wrap: wrap;
}

.movement > button {
    border-radius: 50%;
    width: 60px;
    height: 60px;
}

.movement > button:hover{
    background-color: rgb(190, 190, 190);
}

.movement > button:active{
    background-color: rgb(140, 140, 140);
}

.movement span.material-symbols-rounded {
    font-size: 30px;
}

/* FINE zona joystick */

/* PERSONAGGI E AREA DI MOVIMENTO  */
.gameSpace {
    flex-grow: 1;
    position: relative;
    display: flex;
    justify-content: center;
}

.gameSpace > img {
    position: absolute;
}

/* player1 e player2 sono i 2 giocatori*/
#player1{
    transform: rotateY(180deg);
}

#player1 , #player2 {
    position: absolute;
    z-index: 2;
    top: 40%;
    left: 10%;
    padding: 0;
    transition: all 0.4s;
    background-color: transparent;
    border: none;
    animation: none;
}

/*
    pt.2 nojava.css
    tramite l'azione :focus MA NON l'azione :active si attiva una animazione.
    In base alle azioni (:focus , :active) ci saranno animazioni differenti
*/
#player1:focus:not(:active){
    animation: disappear 5s ease-out;
}

#player1 + img{
    display: none;
    position: absolute;
    z-index: 4;
    width: 200px;
    height: 200px;
    top: 40%;
    left: 0%;
}

#player1:active + img{
    display: block;
    opacity: 0;
    position: absolute;
    animation: rocket1 8s linear;
    animation-delay: 0.3s;
}

#player2:hover{
    animation: spin 5s linear;
    animation-delay: 0.3s;
}

#player2:focus{
    animation: attack2 1.5s ease-in-out;
}

/* $= corrisponde a "finisce per" */
.gameSpace > button > img[src $= "timmy.png"]{
    width: 150px;
    height: 250px;
}

.gameSpace > button > img[src $= "trevor.png"]{
    width: 180px;
    height: 250px;
}

.gameSpace > button > img[src $= "gabibbo.png"] , .game_space > button > img[src $= "gerry.png"]{
    width: 200px;
    height: 250px;
}

.gameSpace > button > img[src $= "sarim.png"]{
    width: 105px;
    height: 175px;
}

/* FINE PARTE RELATIVA AI COMANDI */


/* MEDIA QUERY */

/* media query per laptop */
@media screen and (max-width: 1024px) {
    
    
    #menu{
        top: 20%;
        left: 35%;
        width: 30%;
        height: 45%;
    }

    .joystick , #player2{
        transform: scale(70%);
    }

    #player1{
        transform: scale(70%) rotateY(180deg);
    }

    div.life{
        width: 280px;
        height: 7px;
    }

    .game_space > button > img[src $= "timmy.png"]{
        width: 105px;
        height: 175px;
    }
    
    .game_space > button > img[src $= "trevor.png"]{
        width: 125px;
        height: 175px;
    }

    .game_space > button > img[src $= "gabibbo.png"] , .game_space > button > img[src $= "gerry.png"]{
        width: 140px;
        height: 175px;
    }

    .game_space > button > img[src $= "sarim.png"]{
        width: 175px;
        height: 140px;
    }

    .control{
        height: 160px;
    }

}

/* media query per telefoni / tablet */
@media screen and (max-width: 769px) {

    header{
        left: -305px;
        top: 45%;
        width: 540px;
        height: 90px;
        border-radius: 0px 0px 30px 30px;
        transition: left 0.7s;
        rotate: -90deg;
        background-position: top;
    }

    header:has(> #pauseBtn:focus , #menu:hover){
        top: 45%;
        left: -305px;
    }

    header:hover{
        left: -226px;
        top: 45%;
    }

    header button:active ,header a:active{
        transform: scale(68%) rotate(90deg);
    }

    header button , header a{
        transform: scale(70%) rotate(90deg);
    }

    header button:hover , a:hover{
        filter: drop-shadow(0px 0px 15px black);
        transform: scale(80%) rotate(90deg);
    }

    #menu{
        top: 30%;
        left: 30%;
        width: 40%;
        height: 40%;
        transform: rotate(-90deg);
    }

    #menu a:hover{
        transform: scale(110%) rotate(0deg);
    }

    .joystick , #volumeRange{
        transform: scale(65%);
    }

    main{
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
    }

    section{
        width: 100%;
    }

    section:first-child{
        rotate: 180deg;
    }

    #separator{
        height: 5px;
        width: 100%;
        left: 0%;
        top: 50%;
    }
    
    div.life{
        height: 190px;
        width: 5px;
        border-width: 3.5px;
        top: 30px;
    }

    section:first-child div.life{
        left: 20px;
    }

    section:last-child div.life{
        right: 20px;
    }

    .control{
        height: 140px;
    }

    #player1 , #player2{
        top: 20%;
    }

    #player1:focus:not(:active){
        animation: disappear 5s ease-out;
    }
    
    #player1 + img{
        z-index: 4;
        width: 150px;
        height: 150px;
        top: 20%;
        left: 0%;
    }
    
    #player1:active + img{
        animation: rocket1Mobile 8s linear;
    }
    
    #player2:focus{
        animation: attack2Mobile 1.5s ease-in-out;
    }

    #player2:hover{
        animation: spinMobile 5s linear;
        animation-delay: 0.3s;
    }

}

/* media query per telefoni piccoli */
@media screen and (max-width: 480px) {

    .joystick{
        transform: scale(55%);
    }

    .control{
        height: 110px;
    }

    #menu{
        transform: scale(80%);
    }

}